var request = require('request');
var _ = require('underscore');
var tournament_sm = require('StickerMap').TournamentStickerMap;
var team_sm = require('StickerMap').TeamStickerMap;
var team_map = require('StickerMap').TeamMap;
var MongoClient = require('mongodb').MongoClient;
var test = require('assert');
var db_name = "oxlef";

//id = [stickername], full=[Boolean: get full sales history], time=[Integer: past x days avg/median summary]
var get_data = function(id, full, time) {
	var base_api = "http://csgobackpack.net/api/GetItemPrice/";
	var params = {"currency": "USD", "id": id};

	if(full) {
		params["full"] = full;
	}
	if(time) {
		params["time"] = time;
	}
	
	//Construct api call request string
	var api_call = base_api;
	var index = 0;
	_.each(params, function(value, key) {
		if(index == 0) {
			api_call += "?";
		} else {
			api_call += "&";
		}
		api_call += key + "=" + encodeURI(value);
		++index;
	});

	console.log("Making request to: " + api_call);
	request(api_call, function (error, response, body) {
		if (!error && response.statusCode == 200) {
			return body;
		}
	});
}

var store_data = function(data, tournament, team, sticker_type) {
	MongoClient.connect('mongodb://localhost:27017/oxlefdb', function(err, db) {
		_.each(data, function(entry, index) {
			var datetime = entry[0];
			var price = entry[1];
			var quantity = entry[2];

			db.collection(db_name).insertOne( {
					"team": ObjectID(team),
					"tournament": ObjectID(tournament),
					"type": sticker_type,
					"datetime": datetime,
					"price": price,
					"quantity": quantity
				}, 
				function(err, result) {
					test.equal(err, null);
					console.log("Inserted a document into collection.");
					db.close();
				}
			);
		});
	});
}

var migrate_tournament = function(tournament) {
	//(stickers, sticker-type, index)
	_.each(tournament_sm[tournament], function(value, sticker_type, index) {
		_.each(value, function(sticker, team) {
			var result = JSON.parse(get_data(sticker, true));
			store_data(result, tournament, team, sticker_type);
		});
	});
}

var migrate_team = function(team) {
	//(stickers, sticker-type, index)
	_.each(team_sm[team], function(value, sticker_type, index) {
		_.each(value, function(sticker, tournament) {
			console.log(get_data(sticker, true));
			var result = JSON.parse(get_data(sticker, true));
			store_data(result, tournament, team, sticker_type);
		});
	});	
}

var initialize_db = function() {
	//Initialize Teams
	MongoClient.connect('mongodb://localhost:27017/oxlefdb', function(err, db) {
		_.each(team_map, function(value, key, index) {
			db.collection(db_name).insertOne( {
					"_id": key,
					"name": key,
					"abbreviation": value,
					"stats": {}
				}, 
				function(err, result) {
					test.equal(err, null);
					console.log("Inserted a document into collection.");
					db.close();
				}
			);
		});
	});
	//Initialize Tournaments

}

initialize_db();
//migrate_team("Cloud9");
//migrate_tournament("Katowice 2015");